services:
  dynamodb:
    image: amazon/dynamodb-local
    container_name: dynamodb-local
    command: -jar DynamoDBLocal.jar -sharedDb -dbPath /home/dynamodblocal/data
    ports:
      - "8000:8000"
    volumes:
      - ./docker/dynamodb/data:/home/dynamodblocal/data
    networks:
      - stardew-valley-network

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    container_name: dynamodb-admin
    environment:
      DYNAMO_ENDPOINT: http://dynamodb:8000
      AWS_REGION: local
      AWS_ACCESS_KEY_ID: fake
      AWS_SECRET_ACCESS_KEY: fake
    ports:
      - "8001:8001"
    depends_on:
      - dynamodb
    networks:
      - stardew-valley-network

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - stardew-valley-network

  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: kafka-cluster-ui
    ports:
      - "8100:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:9092
    depends_on:
      - kafka
    networks:
      - stardew-valley-network

  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.4
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - 22181:2181
    networks:
      - stardew-valley-network

  kafka:
    image: confluentinc/cp-kafka:7.4.4
    depends_on:
      - zookeeper
    ports:
      - 29092:29092
      - 9092:9092
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
    networks:
      - stardew-valley-network

#  jaeger:
#    image: jaegertracing/all-in-one
#    environment:
#      - COLLECTOR_ZIPKIN_HTTP_PORT=19411
#    ports:
#    - 5775:5775/udp
#    - 6831:6831/udp
#    - 6832:6832/udp
#    - 5778:5778
#    - 16686:16686
#    - 14268:14268
#    - 19411:19411
#
#  grafana:
#    image: grafana/grafana
#    environment:
#      - GF_SECURITY_ADMIN_PASSWORD=password1
#    ports:
#      - ${GRAFANA_PORT:-3000}:3000
#    volumes:
#      - ./docker/grafana/datasources:/etc/grafana/provisioning/datasources
#      - ./docker/grafana/dashboards:/var/lib/grafana/dashboards
#      - ./docker/grafana/dashboard.yaml:/etc/grafana/provisioning/dashboards/main.yaml
#    depends_on:
#      - jaeger
#      - prometheus
#
#  prometheus:
#    image: prom/prometheus:latest
#    volumes:
#      - ./docker/prometheus/:/etc/prometheus/
#      - ./docker/prometheus/prometheus_data:/prometheus_data
#    command:
#      - '--config.file=/etc/prometheus/prometheus.yaml'
#      - '--storage.tsdb.path=/prometheus_data'
#      - '--web.console.libraries=/usr/share/prometheus/console_libraries'
#      - '--web.console.templates=/usr/share/prometheus/consoles'
#    ports:
#      - 9090:9090
#    restart: always
#
#  loki:
#    image: grafana/loki:latest
#    ports:
#      - "3100:3100"
#    volumes:
#     - ./docker/loki/loki.yaml:/etc/config/loki.yaml
#    entrypoint:
#     - /usr/bin/loki
#     - -config.file=/etc/config/loki.yaml

#  user-service:
#    image: technikbober/user-service:0.0.1
#    container_name: user-service
#    ports:
#      - "8081:9090"
#    env_file:
#      - ./docker/backend/user-service/.env
#    depends_on:
#      - dynamodb
#      - redis
#    networks:
#      - stardew-valley-network
#
#  api-gateway:
#    image: technikbober/api-gateway:0.0.1
#    container_name: api-gateway
#    ports:
#      - "8080:8080"
#    env_file:
#      - ./docker/backend/api-gateway/.env
#    depends_on:
#      - user-service
#    networks:
#      - stardew-valley-network

#  minio:
#    image: quay.io/minio/minio
#    container_name: minio
#    restart: unless-stopped
#    ports:
#      - "9000:9000"
#      - "9001:9001"
#    environment:
#      MINIO_ROOT_USER: minio
#      MINIO_ROOT_PASSWORD: password
#    command: server /data --console-address ":9001"
#    volumes:
#      - minio_data:/data


volumes:
  redis_data:
  dynamodb_data:
  kafka_data:

networks:
  stardew-valley-network:
    driver: bridge