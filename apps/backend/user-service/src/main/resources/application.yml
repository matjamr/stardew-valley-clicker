spring:
  application:
    name: user-service
  cloud:
    aws:
      dynamodb:
        region: ${SPRING_CLOUD_AWS_DYNAMODB_REGION:local}
      credentials:
        access-key: ${SPRING_CLOUD_AWS_CREDENTIALS_ACCESS_KEY:fake}
        secret-key: ${SPRING_CLOUD_AWS_CREDENTIALS_SECRET_KEY:fake}
  grpc:
    server:

      reflection:
        enabled: ${SPRING_GRPC_SERVER_REFLECTION_ENABLED:true}
      ssl:
        secure: ${SPRING_GRPC_SERVER_SSL_SECURE:false}
  data:
    redis:
      port: ${SPRING_DATA_REDIS_PORT:6379}
      host: ${SPRING_DATA_REDIS_HOST:localhost}

security:
  jwt:
    access:
      secret-key: ${SECURITY_JWT_ACCESS_SECRET_KEY}
      expiration-time: ${SECURITY_JWT_ACCESS_EXPIRATION_TIME:3600000}
    refresh:
      secret-key: ${SECURITY_JWT_REFRESH_SECRET_KEY}
      expiration-time: ${SECURITY_JWT_REFRESH_EXPIRATION_TIME:360000000}

aws:
  region: ${AWS_REGION:local}
  dynamodb:
    endpoint: ${AWS_DYNAMODB_ENDPOINT:http://localhost:8000}
    accessKey: ${AWS_DYNAMODB_ACCESS_KEY:fake}
    secretKey: ${AWS_DYNAMODB_SECRET_KEY:fake}
  dynamo:
    sessionToken: ${AWS_DYNAMO_SESSION_TOKEN:fake-token}

grpc:
  server:
    port: 5444
    reflection-service-enabled: true